# a(1)  = 1  [1]                                                => âˆ…
# a(2)  = 2  [1, 1]                                           * => 2
# a(3)  = 4  [1, 1, 2]                                          => 2, 3
# a(4)  = 5  [1, 1, 2, 1]                                     * => 2, 3, 3
# a(5)  = 7  [1, 1, 2, 2, 1]                                  * => 2, 3, 4, 3
# a(6)  = 9  [1, 1, 2, 1, 3, 1]                               * => 2, 3, 3, 4, 4
# a(7)  = 11 [1, 1, 2, 2, 1, 3, 1]                            * => 2, 3, 4, 3, 4, 4
# a(8)  = 14 [1, 1, 2, 1, 3, 1, 4, 1]                           => 2, 3, 3, 4, 4, 5, 5
# a(9)  = 16 [1, 1, 2, 1, 3, 2, 2, 3, 1]                      * => 2, 3, 3, 4, 5, 4, 5, 4
# a(10) = 19 [1, 1, 2, 1, 3, 2, 2, 3, 3, 1]                     => 2, 3, 3, 4, 5, 4, 5, 6, 4
# a(11) = 21 [1, 1, 2, 1, 3, 2, 2, 3, 1, 4, 1]                * => 2, 3, 3, 4, 5, 4, 5, 4, 5, 5
# a(12) = 24 [1, 1, 2, 1, 3, 2, 2, 3, 3, 1, 4, 1]             * => 2, 3, 3, 4, 5, 4, 5, 6, 4, 5, 5
# a(13) = 27 [1, 1, 2, 1, 3, 1, 4, 2, 2, 3, 2, 4, 1]          * => 2, 3, 3, 4, 4, 5, 6, 4, 5, 5, 6, 5
# a(14) = 30 [1, 1, 2, 1, 3, 1, 4, 2, 2, 3, 3, 2, 4, 1]       * => 2, 3, 3, 4, 4, 5, 6, 4, 5, 6, 5, 6, 5
# a(15) = 33 [1, 1, 2, 1, 3, 1, 4, 2, 2, 3, 2, 4, 1, 5, 1]    * => 2, 3, 3, 4, 4, 5, 6, 4, 5, 5, 6, 5, 6, 6
# a(16) = 36 [1, 1, 2, 1, 3, 1, 4, 2, 2, 3, 3, 2, 4, 1, 5, 1] * => 2, 3, 3, 4, 4, 5, 6, 4, 6, 5, 5, 6, 5, 6, 6

# a(1) = 1
# a(2) = 1 + 2
# a(3) = 1 + 2 + 2
# a(4) = 1 + 2 + 2 + 3

# optimally, the pairwise sum of S_k will consist of
# one   2
# two   3s
# three 4s ...

# with a total of k - 1 numbers.

# Bounded below by -> (A060432(n - 1) + n - 1)/2 + 1

require_relative "a060432"

class OEIS

  def self.a259280(n)
    lower_bound = 0.5 * (a060432(n - 1) + n + 1)
    lower_bound.ceil
  end

end
